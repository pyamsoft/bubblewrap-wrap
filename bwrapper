#!/bin/sh

# The GPLv2 License
#
#   Copyright (C) 2017  Peter Kenji Yamanaka
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along
#   with this program; if not, write to the Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# bwrapper - autogenerate bww scripts

__PROGRAM_NAME="$(basename "$0")"

main()
{
  if [ -z "$1" ]; then
    printf -- 'Must specify a command\n'
    return 1
  fi

  # Loop and consume arguments until we can't anymore

  pre_opts=""
  while :; do
    case "$1" in
      "--cap-add"|"--cap-drop"|"--forcename"|"--bind-if-exists")
        # should have 1 arguments, shift 1 more times
        pre_opts="${pre_opts} $1"
        shift
        pre_opts="${pre_opts} $1"
        shift
        ;;
      "--setenv"|"--bind"|"--ro-bind")
        # should have 2 arguments, shift 2 more times
        pre_opts="${pre_opts} $1"
        shift
        pre_opts="${pre_opts} $1"
        shift
        pre_opts="${pre_opts} $1"
        shift
        ;;
      --*)
        pre_opts="${pre_opts} $1"
        shift
        ;;
      *)
        break
        ;;
    esac
  done

  if ! command -v "$1" > /dev/null 2>&1; then
    printf -- 'Invalid command: %s\n' "$1"
    return 1
  fi

  command_name="$(basename "$1")"

  target_dir="${HOME}/bin"
  if [ ! -d "${target_dir}" ]; then
    printf -- '%s expects the directory: %s to exist on the PATH\n' \
      "${__PROGRAM_NAME}" "${target_dir}"
    return 1
  fi

  target_file="${target_dir}/${command_name}"
  if [ -f "${target_file}" ]; then
    printf -- 'Remove old file at %s...\n' "${target_file}"
    rm -f "${target_file}" || return 1
  fi

  printf -- 'Output to %s...\n' "${target_file}"
  cat > "${target_file}" << EOF
#!/bin/sh

# This file is autogenerated by ${__PROGRAM_NAME}, modifications may be
# overwritten by the script.

# This script expects the 'bww' script to be available to the user somewhere
# on the \$PATH. It will fail if the situation proves otherwise.

exec bww ${pre_opts} $* "\$@"
EOF

  printf -- 'Mark %s as executable...\n' "${target_file}"
  chmod 700 "${target_file}" || return 1

  printf -- 'Generated: '%s'.\n' "${target_file}"
  return 0
}

main "$@" || exit 1
exit 0
